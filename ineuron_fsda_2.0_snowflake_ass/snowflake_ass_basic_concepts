USE WAREHOUSE DEMO_WAREHOUSE;
USE DATABASE DEMO_DATABASE;


--1.SET PRIMARY KEY BY LOADING A TABLE
CREATE OR REPLACE TABLE GM_SALES_DATA_FINAL
(
  "ORDER_ID" VARCHAR2(30),
  "ORDER_DATE" DATE PRIMARY KEY,
  "SHIP_DATE" DATE,
  "SHIP_MODE" VARCHAR2(30),
  "CUSTOMER_NAME" VARCHAR2(30),
  "SEGMENT" VARCHAR2(20),
  "STATE" VARCHAR2(50),
  "COUNTRY" VARCHAR2(50),
  "MARKET" VARCHAR2(50),
  "REGION" VARCHAR2(50),
  "PRODUCT_ID" VARCHAR2(40),
  "CATEGORY" VARCHAR2(40),
  "SUB_CATEGORY" VARCHAR2(30),
  "PRODUCT_NAME" VARCHAR2(200),
  "SALES" VARCHAR2(20),
  "QUANTITY" VARCHAR2(50),
  "DISCOUNT" VARCHAR2(20),
  "PROFIT" VARCHAR2(30),
  "SHIPPING_COST" VARCHAR2(30),
  "ORDER_PRIORITY" VARCHAR2(20),
  "YEAR" VARCHAR2(25));
 
 DESCRIBE TABLE GM_SALES_DATA_FINAL;
 
 SELECT *FROM GM_SALES_DATA_FINAL;
 
 --COPYING THE FILES
CREATE OR REPLACE TABLE GM_SALES_DATA_FINAL_COPY  LIKE GM_SALES_DATA_FINAL;

DESCRIBE TABLE GM_SALES_DATA_FINAL_COPY;

-- EXTRACTING THE DATA 
CREATE OR REPLACE TABLE GM_SALES_DATA_FINAL_COPY_DATA AS
SELECT * FROM GM_SALES_DATA_FINAL;

SELECT * FROM GM_SALES_DATA_FINAL_COPY_DATA ;

--TO DELETE THE PRIMAY KEY 
ALTER TABLE GM_SALES_DATA_FINAL_COPY DROP PRIMARY KEY;
 
DESCRIBE TABLE GM_SALES_DATA_FINAL_COPY;

 
 --2.Change the Primary key to Order Id Column.
 
 CREATE OR REPLACE TABLE GM_SALES_DATA_FINAL_COPY
(
  "ORDER_ID" VARCHAR2(30) PRIMARY KEY,
  "ORDER_DATE" DATE,
  "SHIP_DATE" DATE,
  "SHIP_MODE" VARCHAR2(30),
  "CUSTOMER_NAME" VARCHAR2(30),
  "SEGMENT" VARCHAR2(20),
  "STATE" VARCHAR2(50),
  "COUNTRY" VARCHAR2(50),
  "MARKET" VARCHAR2(50),
  "REGION" VARCHAR2(50),
  "PRODUCT_ID" VARCHAR2(40),
  "CATEGORY" VARCHAR2(40),
  "SUB_CATEGORY" VARCHAR2(30),
  "PRODUCT_NAME" VARCHAR2(200),
  "SALES" VARCHAR2(20),
  "QUANTITY" VARCHAR2(50),
  "DISCOUNT" VARCHAR2(20),
  "PROFIT" VARCHAR2(30),
  "SHIPPING_COST" VARCHAR2(30),
  "ORDER_PRIORITY" VARCHAR2(20),
  "YEAR" VARCHAR2(25));
  
 DESCRIBE TABLE GM_SALES_DATA_FINAL_COPY;

  
-- 3.Check the data type for Order date and Ship date and mention in what data typeit should be?

SELECT ORDER_DATE,SHIP_DATE FROM GM_SALES_DATA_FINAL_COPY_DATA;

DESCRIBE TABLE GM_SALES_DATA_FINAL_COPY;
 
SELECT *FROM GM_SALES_DATA_FINAL_COPY_DATA;
 


--4. Create a new column called order_extract and extract the number after the last ‘–‘ from Order ID column.

SELECT *,
SUBSTRING(ORDER_ID,9,5) AS ORDER_EXTRACT
FROM GM_SALES_DATA_FINAL_COPY_DATA;


--5.Create a new column called Discount Flag and categorize it based on discount.Use ‘Yes’ if the discount is greater than zero else ‘No’.
SELECT *,
        CASE 
        WHEN DISCOUNT > 0 THEN 'YES'
        ELSE 'NO'
        END AS DISCOUNT_FLAG
 FROM GM_SALES_DATA_FINAL;
     

--6.Create a new column called process days and calculate how many days it takes for each order id to process from the order to its shipment.


SELECT *,
       datediff('DAY',ORDER_DATE,SHIP_DATE) AS PROCESS_DAYS
       FROM GM_SALES_DATA_FINAL_COPY_DATA;
       
UPDATE GM_SALES_DATA_FINAL_COPY_DATA
SET PROCESS_DAYS=datediff WHERE PROCESS_DAYS IS NULL;

--7.Create a new column called Rating and then based on the Process dates give rating like given below.
    --a. If process days less than or equal to 3days then rating should be 5
    --b. If process days are greater than 3 and less than or equal to 6 then rating should be 4
    --c. If process days are greater than 6 and less than or equal to 10 then rating should be 3
    --d. If process days are greater than 10 then the rating should be 2.


SELECT *,
       CASE
       WHEN PROCESS_DAYS <= 3 THEN '5'
       WHEN PROCESS_DAYS > 3 AND PROCESS_DAYS <=6 THEN '4'
       WHEN PROCESS_DAYS < 6 AND PROCESS_DAYS <= 10 THEN '3'
       ELSE '2'
       END AS RATING
FROM GM_SALES_DATA_FINAL_COPY_DATA;
